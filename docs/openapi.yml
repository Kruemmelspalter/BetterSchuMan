openapi: 3.0.0

info:
  version: 0.0.1
  title: Custom API for Schulmanager

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    teacher:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
    course:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: Computer Science
        abbreviation:
          type: string
          example: CS
        teacher:
          $ref: "#/components/schemas/teacher"
        color:
          type: string

paths:
  /session:
    description: manage session (logging in and out etc.)
    get:
      security:
        - bearerAuth: []
      description: get info about session
      responses:
        200:
          description: successfully fetched login info
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: john.doe@example.com
                  id:
                    type: integer
                  firstname:
                    type: string
                    example: John
                  lastname:
                    type: string
                    example: Doe
                  studentId:
                    type: integer
                  classId:
                    type: integer

        400:
          description: bad request
        401:
          description: bad credentials
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond

    post:
      description: Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        200:
          description: Logging in was successful
          headers:
            X-New-Bearer-Token:
              schema:
                type: string
              description: JWT Bearer Token
        400:
          description: bad request
        401:
          description: bad credentials
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond
    delete:
      security:
        - bearerAuth: []
      description: logout
      responses:
        200:
          description: Logged out successfully
        400:
          description: bad request
        401:
          description: logging in first is required
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond

  /courses:
    get:
      security:
        - bearerAuth: []
      responses:
        200:
          description: successfully fetched courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/course"
        400:
          description: bad request
        401:
          description: logging in first is required
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond
  /courses/{courseId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          schema:
            type: integer
      responses:
        200:
          description: successfully fetched course
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/course"
        400:
          description: bad request
        401:
          description: logging in first is required
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond
  /courses/{courseId}/units:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          schema:
            type: integer
      responses:
        200:
          description: successfully fetched units
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    done:
                      type: boolean
        400:
          description: bad request
        401:
          description: logging in first is required
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond
  /courses/{courseId}/units/{unitId}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          schema:
            type: integer
        - name: unitId
          in: path
          schema:
            type: integer
      responses:
        200:
          description: successfully fetched unit
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  done:
                    type: boolean
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                          enum: [text, attachments]
                        content:
                          oneOf:
                            - type: array
                              items:
                                type: object
                                properties:
                                  download:
                                    type: string
                                  filename:
                                    type: string
                                  contenttype:
                                    type: string
                            - type: string
                              description: HTML text
                              example: <p>Hello World!</p>

        400:
          description: bad request
        401:
          description: logging in first is required
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond
  /courses/undone:
    get:
      security:
        - bearerAuth: []
      responses:
        200:
          description: successfully fetched units
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
        400:
          description: bad request
        401:
          description: logging in first is required
        502:
          description: the Schulmanager servers returned something the server couldn't handle
        504:
          description: the Schulmanager servers didn't respond
